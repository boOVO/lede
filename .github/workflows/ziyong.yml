
name: ziyong

on: 
  repository_dispatch:
  workflow_dispatch:
  
jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@master


      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      #- name: Generate configuration file
        #run: make defconfig
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_luci-app-samba=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-zerotier=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-unblockmusic=y
          CONFIG_PACKAGE_luci-app-jd-dailybonus=y
          CONFIG_PACKAGE_luci-app-accesscontrol=y
          CONFIG_PACKAGE_luci-app-arpbind=y
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-nlbwmon=y
          CONFIG_PACKAGE_luci-app-ramfree=y
          CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui=y
          CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_OFFLOADING=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-serverchan=y
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
        
      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/checkout@master
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/checkout@master
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/checkout@master
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
